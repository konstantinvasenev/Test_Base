
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	ПланСчетов = ПланыСчетов.Управленческий;
	ВидыСубконто = ПланыВидовХарактеристик.ВидыСубконто;
	
	Субконто = Новый Массив;
	Субконто.Добавить(ВидыСубконто.Номенклатура);
	Субконто.Добавить(ВидыСубконто.Склады);
	Субконто.Добавить(ВидыСубконто.Партии);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", ОрганизацияПоставщик);
	Запрос.УстановитьПараметр("Склад", СкладПоставщшика);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Субконто", Субконто);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Товары", ПланСчетов.Товары);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	КупляПродажаСписокНоменклатуры.Номенклатура КАК Номенклатура,
	               |	СУММА(КупляПродажаСписокНоменклатуры.Количество) КАК Количество,
	               |	СУММА(КупляПродажаСписокНоменклатуры.Сумма) КАК Сумма,
	               |	&Организация КАК Организация,
	               |	&Склад КАК Склад
	               |ПОМЕСТИТЬ ТЧ
	               |ИЗ
	               |	Документ.КупляПродажа.СписокНоменклатуры КАК КупляПродажаСписокНоменклатуры
	               |ГДЕ
	               |	КупляПродажаСписокНоменклатуры.Ссылка = &Ссылка
	               |	И КупляПродажаСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КупляПродажаСписокНоменклатуры.Номенклатура
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Организация,
	               |	Номенклатура,
	               |	Склад";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТЧ.Организация КАК Организация,
		               |	ТЧ.Склад КАК Склад,
		               |	ТЧ.Номенклатура КАК Номенклатура,
					   |	Представление(ТЧ.Номенклатура) КАК НоменклатураПредставление,
		               |	ТЧ.Количество КАК Количество,
		               |	ТЧ.Сумма КАК Сумма,
		               |	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		               |	ЕСТЬNULL(УправленческийОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		               |	УправленческийОстатки.Субконто3 КАК Партия
		               |ИЗ
		               |	ТЧ КАК ТЧ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		               |				&МоментВремени,
		               |				Счет = &Товары,
		               |				&Субконто,
		               |				(Организация, Субконто1, Субконто2) В
		               |					(ВЫБРАТЬ
		               |						ТЧ.Организация,
		               |						ТЧ.Номенклатура,
		               |						ТЧ.Склад
		               |					ИЗ
		               |						ТЧ КАК ТЧ)) КАК УправленческийОстатки
		               |		ПО ТЧ.Организация = УправленческийОстатки.Организация
		               |			И ТЧ.Номенклатура = УправленческийОстатки.Субконто1
		               |			И ТЧ.Склад = УправленческийОстатки.Субконто2
		               |ИТОГИ
		               |	МАКСИМУМ(Количество),
		               |	МАКСИМУМ(Сумма),
		               |	СУММА(КоличествоОстаток),
		               |	СУММА(СуммаОстаток)
		               |ПО
		               |	Номенклатура";
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл 
			Превышение = ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоОстаток;
			Если Превышение > 0 Тогда 
				Сообщить("Недостаток товара "
						+ ВыборкаНоменклатура.НоменклатураПредставление
						+ " в количестве "
						+ Превышение);
				Отказ = Истина;		
				Возврат;
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.Количество;
			Выборка = ВыборкаНоменклатура.Выбрать();
			Пока Выборка.Следующий() Цикл 
				КСписанию = Мин(ОсталосьСписать, Выборка.КоличествоОстаток);
				
				Движение = Движения.Управленческий.Добавить();
				Движение.Период = Дата;
				Движение.Организация = ОрганизацияПоставщик;
				Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
				Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = СкладПоставщшика;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Партии] = Выборка.Партия;
				Движение.КоличествоКт = КСписанию;
				Движение.Сумма = Выборка.Количество / Выборка.КоличествоОстаток * Выборка.СуммаОстаток;
				
				
				Движение = Движения.Управленческий.Добавить();
				Движение.Период = Дата;
				Движение.Организация = ОрганизацияПоставщик;
				Движение.СчетДт = ПланыСчетов.Управленческий.Товары;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = СкладПокупателя;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Партии] = Выборка.Партия;
				Движение.КоличествоДт = КСписанию;
				Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
				Движение.Сумма = Выборка.Количество / Выборка.КоличествоОстаток * Выборка.СуммаОстаток;
				
				ОсталосьСписать = ОсталосьСписать - КСписанию;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Запись = Движения.Управленческий.Добавить();
		Запись.Период = Дата;
		Запись.Организация = ОрганизацияПоставщик;
		Запись.СчетДт = ПланСчетов.Покупатели;
		Запись.СубконтоДт[ВидыСубконто.Организации] = ОрганизацияПокупатель;
		Запись.СчетКт = ПланСчетов.ПрибылиУбытки;
		Запись.Сумма = СписокНоменклатуры.Итог("Сумма");
		
	КонецЕсли;	

КонецПроцедуры
